#!/usr/bin/env bash
# backup.sh - script backup c∆° b·∫£n b·∫±ng tar.gz
# Phonk generated this
# ver: v2

set -euo pipefail  # B·∫Øt l·ªói nghi√™m ng·∫∑t

# === C·∫§U H√åNH C∆† B·∫¢N ===
SRC_DIR="${1:-./test_source}"  # N·∫øu kh√¥ng nh·∫≠p, m·∫∑c ƒë·ªãnh l√† ./test_source
DEST_DIR="./backups"
KEEP=7
MIN_FREE_GB=1  # y√™u c·∫ßu √≠t nh·∫•t 1GB tr·ªëng

mkdir -p "$DEST_DIR"
TIMESTAMP="$(date +'%Y-%m-%d_%H-%M-%S')"
BASENAME="$(basename "$SRC_DIR")"
OUTFILE="${DEST_DIR}/${BASENAME}-${TIMESTAMP}.tar.gz"
LOGFILE="${DEST_DIR}/backup.log"

# === H√ÄM GHI LOG ===
log() {
  echo "$(date +'%F %T') - $*" | tee -a "$LOGFILE"
}

# === KI·ªÇM TRA NGU·ªíN ===
if [ ! -d "$SRC_DIR" ]; then
  log "‚ùå L·ªñI: Th∆∞ m·ª•c ngu·ªìn kh√¥ng t·ªìn t·∫°i: $SRC_DIR"
  exit 1
fi

# === KI·ªÇM TRA DUNG L∆Ø·ª¢NG ·ªî ƒêƒ®A ===
free_gb=$(df -BG "$DEST_DIR" | awk 'NR==2 {print $4}' | sed 's/G//')
if (( free_gb < MIN_FREE_GB )); then
  log "‚ùå L·ªñI: Kh√¥ng ƒë·ªß dung l∆∞·ª£ng (c√≤n ${free_gb}GB, c·∫ßn ‚â• ${MIN_FREE_GB}GB)"
  exit 1
fi

# === B·∫ÆT ƒê·∫¶U BACKUP ===
log "üöÄ B·∫Øt ƒë·∫ßu backup: $SRC_DIR ‚Üí $OUTFILE"
tar -czf "$OUTFILE" -C "$(dirname "$SRC_DIR")" "$(basename "$SRC_DIR")"
log "‚úÖ Ho√†n t·∫•t: $OUTFILE"

# === XO√Å FILE BACKUP C≈® ===
count=$(ls -1t ${DEST_DIR}/${BASENAME}-*.tar.gz 2>/dev/null | wc -l)
if [ "$count" -gt "$KEEP" ]; then
  files_to_delete=$(ls -1t ${DEST_DIR}/${BASENAME}-*.tar.gz | tail -n +"$((KEEP+1))")
  for f in $files_to_delete; do
    rm -f "$f" && log "üóëÔ∏è Xo√°: $f"
  done
fi

log "üèÅ K·∫æT TH√öC backup"
